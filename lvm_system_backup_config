# Place this file under /etc/default or specify the location as first parameter
	# The backup will be send over the network to a remote host, if you do not want this, you can enable the backup to a local folder useing this option
	# LOCAL_BACKUP="1"

        # Path on local/remote host where the images are saved. I will create two directorys with hostname and date under it.
        # DIR=""

        # Host to store the backup
	# If you use the LOCAL_BACKUP feature just set this to 'localhost'
        # HOST=""

        # User to login to $HOST via SSH/SCP
	# Only needed if the backup is send over the network
        # USER=""

        # Override PATH var
        # PATH=""

        # Change hostname
        # hostname=""

        # Verbose, values are 1 for enabled and 0 for disabled. Default is disabled
        # VERBOSE="1"
        
        # Should I override the local/remote dir if it already exists? Values are 1 for enabled and 0 for disabled.
        # IGNORE_DIR="1"
        
        # By default, the data copied with dd is piped over ssh. If encryption isn't need, it's also possible to send it raw.
        # Turning this to 1 will improve performance. But it also means that the data can be captured in plain text or manipulated.
        # THIS DOES NOT MEAN YOU DON'T HAVE TO SETUP PUBLIC KEY AUTHENTICATION VIA SSH!
        # SSH is still used for creating folders and performing of error handling.
	# DON'T USE WITH LOCAL_BACKUP!
                # Values are 1 for enabled and 0 for disabled
                # UNSECURE_TRANSMISSION=0
        
                # Start Port on which the receiving server listens for data. The port will be incremented by one after it was used. This should prevent inconsistency.
                # A normal run will need n Ports, where n is the total number of logical volumes to backup.
                # Make sure the ports aren't used by other applications, no error handling for this!
                # Also iptables could be an issue, just saying ;-)
                # PORT=60000

        # /boot backup feature
                # Backup /boot device? Only if /boot is on an own partition, outside of the vg. Values are 1 for enabled and 0 for disabled.
                # BACKUP_BOOT=0

                # Path to disk, e.g. /dev/sda
                # DISK="/dev/vda"

                # Path to /boot, e.g. /dev/sda1
                #BOOT="/dev/vda1"

        # VG backup feature
                # Backup a VG? Values are 1 for enabled and 0 for disabled. Default is enabled.
                # BACKUP_VG=1

                # Volume Group to backup, eg =('VG_System' 'VG_data')
                # declare -a VG_NAME=('vg')


                # The following vars have to be set for every volume group.
                # Size of the snapshot, e.g. 3G
                # declare -a SIZE=('3G')

                # Exclude logical volume, e.g. =('LV_excluded1' 'LV_excluded2')
                # declare -a LV_EXCLUDE=

		# Snapshot suffix
		# SNAPSHOT_SUFFIX="-snap"



        # Nagios, write a log file for the nagios plugin to parse
                # Values are 1 for enabled and 0 for disabled. Default is disabled.
                # NAGIOS=

                # Override location. Default is /var/log/lvm_system_backup_nagios_log
                # NAGIOS_LOG=

        # Samba backup feature
                # Backup samba ADDC data? Values are 1 for enabled and 0 for disabled. Default is disabled.
                # BACKUP_SAMBA=

                # Path to samba data on debian, change accordingly to your system
                # declare -a SAMBA_DIRS=('/etc/samba' '/var/lib/samba/private' '/var/lib/samba/sysvol')
                
        # Mysql backup feature
                # Backup MySQL databases? Values are 1 for enabled and 0 for disabled. Default is disabled.
                # BACKUP_MYSQL=

                # Exclude mysql databasees
                # declare -a MYSQL_EXCLUDE=('information_schema' 'performance_schema')

                # MySQL backup user
                # MYSQL_USER=

                # MySQL backup user password
                # MYSQL_PASSWORD=
                
        # Delete old backups   
                # Delete old backups on $HOST? Values are 1 for enabled and 0 for disabled. Default is disabled.
                # DELETE_OLD_DATA=
                
                # Every folder, which is older than $DAYS_OLD in $DIRS/$hostname on the remote host will be deleted.
                # DAYS_OLD=
